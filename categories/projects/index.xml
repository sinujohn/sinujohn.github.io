<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Hack</title>
    <link>https://sinujohn.github.io/categories/projects/index.xml</link>
    <description>Recent content in Projects on Hack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <atom:link href="https://sinujohn.github.io/categories/projects/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>RIP Thulika Keyboard.. (sob).. (sob)</title>
      <link>https://sinujohn.github.io/2015/05/12/rip-thulika-keyboard-sob-sob/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/05/12/rip-thulika-keyboard-sob-sob/</guid>
      <description>&lt;p&gt;Just got to know that Google has came up with an handwriting recognition app - &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.handwriting.ime&amp;amp;hl=en&#34;&gt;Google Handwriting Input&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And the good part is it has got Indian language support. Yay!!&lt;/p&gt;

&lt;p&gt;But the bad part is that, it means the demise of my very own &lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.thulika&amp;amp;hl=en&#34;&gt;Thulika Keyboard&lt;/a&gt;. I had created it &lt;a href=&#34;https://sinujohn.github.io/2013/01/21/thulika-keyboard/&#34;&gt;about 2 years back&lt;/a&gt;, and at that time there was no handwriting recognition app for any Indian language. I also had opensourced it, and have got requests from many to translate it to their language(Arabic, Hausa, Tamil to name a few) and some even have used it as part of their school/college projects.&lt;/p&gt;

&lt;p&gt;RIP Thulika Keyboard, it was pleasure to have you around(it&amp;rsquo;s still out there, so you can download it and play with it, but with Google&amp;rsquo;s new app, mine seems a bit primitive :( ).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/rip.jpg&#34; alt=&#34;RIP&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Google&amp;rsquo;s new app is awesome though, it recognises full words (mine could only do a letter at a time), and speaking about recognition, its very good at that.&lt;/p&gt;

&lt;p&gt;So, here is me(Thulika), the old out dated tech giving way for the new stylish Google app ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Implementing a Search Engine</title>
      <link>https://sinujohn.github.io/2013/07/16/implementing-a-search-engine/</link>
      <pubDate>Tue, 16 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2013/07/16/implementing-a-search-engine/</guid>
      <description>&lt;p&gt;The WordCount is a trivial problem. What is the next best problem to tackle in Map Reduce? Something in which I can create my own Readers,Writables etc?&lt;/p&gt;

&lt;p&gt;I kept wondering about this for some time. And then decided on what about a Search Engine? After all, the concepts of BigData originated at the house of the Search giant Google (from the papers they published about Map Reduce, BigTable etc.)&lt;/p&gt;

&lt;p&gt;The first step was to implement an Inverted Index. To lookup the index faster, I decided to use the BigTable implementation for hadoop called HBase. So the Inverted Index creator reads the files on the disk and creates an InvertedIndex as an HBase table. (there is a small bug with respect to inserting data to HBase table, but I have written the InvertedIndex data to a file and that works. Should check it sometime later)&lt;/p&gt;

&lt;p&gt;So now the InvertedIndex is ready, the next step is to look it up. Haven&amp;rsquo;t done that yet! Find the code in &lt;a href=&#34;https://github.com/sinujohn/SearchEn/&#34;&gt;my Git Repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A good read on &lt;a href=&#34;http://www.ardendertat.com/2011/05/30/how-to-implement-a-search-engine-part-1-create-index/&#34;&gt;how to create Search Engine&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Map Reduce</title>
      <link>https://sinujohn.github.io/2013/07/16/map-reduce/</link>
      <pubDate>Tue, 16 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2013/07/16/map-reduce/</guid>
      <description>&lt;p&gt;Everyone is saying that the world is going the cloud way. Big Data, Analytics etc are today&amp;rsquo;s buzzwords. I used to wonder what is so special about the cloud? I read a bit about Hadoop, HBase (the NoSQL DB for Hadoop) etc and came to know about the Map Reduce Framework.&lt;/p&gt;

&lt;p&gt;Map Reduce is a framework which helps us to write program for the cloud. It is a simple framework. The MapReduce version of the Hello World program for Hadoop is the WordCount program.&lt;/p&gt;

&lt;p&gt;I decided to start experimenting with this framework and have written a couple of programs.
Find it here in &lt;a href=&#34;https://github.com/sinujohn/MapReduce/&#34;&gt;my git repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How Map and Reduce operations are actually carried out:
&lt;a href=&#34;http://wiki.apache.org/hadoop/HadoopMapReduce&#34;&gt;http://wiki.apache.org/hadoop/HadoopMapReduce&lt;/a&gt;
&lt;a href=&#34;http://wiki.apache.org/hadoop/MapReduce&#34;&gt;http://wiki.apache.org/hadoop/MapReduce&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some Usecases of MapReduce: &lt;a href=&#34;http://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/&#34;&gt;http://highlyscalable.wordpress.com/2012/02/01/mapreduce-patterns/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Opensourced Thulika</title>
      <link>https://sinujohn.github.io/2013/03/05/opensourced-thulika/</link>
      <pubDate>Tue, 05 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2013/03/05/opensourced-thulika/</guid>
      <description>&lt;p&gt;I just opensourced the Thulika Keyboard app and the associated training softwares. &lt;a href=&#34;https://github.com/sinujohn/ThulikaIME&#34; target=&#34;_blank&#34;&gt;Find it here on Github&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Immortal Login</title>
      <link>https://sinujohn.github.io/2013/01/21/immortal-login/</link>
      <pubDate>Mon, 21 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2013/01/21/immortal-login/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.immortal&#34; target=&#34;_blank&#34;&gt;Download the app from PlayStore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/sinujohn/immortal&#34; target=&#34;_blank&#34;&gt;Find the source on Github&lt;/a&gt;
I have got Asianet Broadband connection and they require me to log in inorder to have an internet connection. In Android whenever I log in, Android keeps the browser app alive only for about 15 minutes. So I used to get logged out frequently. I was fed up of this, and because of a Developer&amp;rsquo;s itch, I developed an Android app - &lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.immortal&#34; target=&#34;_blank&#34;&gt;Immortal Login&lt;/a&gt;. It is a very simple app and took only about 2 hours to create it completely. The app have got a web view using which the user can log in to a site. Then upon the pressing of a Start button, my activity starts a service. Since the activity has got a service, the app will not be killed by the Android system (at least it&amp;rsquo;ll try not to kill the app :)). Taadaa thats it.. you have got an Immortal Login app. Now there is no hassle of frequent log outs!
The app works with any ISP site. Also it need not be an ISP website, it can be any site which you want to keep alive so as not to get logged out :)
The app is currently used by me and my friends who use this ISP. I have also got downloads and positive comments from users who use BSNL connection.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Thulika Keyboard</title>
      <link>https://sinujohn.github.io/2013/01/21/thulika-keyboard/</link>
      <pubDate>Mon, 21 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2013/01/21/thulika-keyboard/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.thulika&#34; target=&#34;_blank&#34;&gt;Download the app from PlayStore&lt;/a&gt;
On January 6th early morning(at about 3 AM), I created my Google Developer account, and published my first Android app - &lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.thulika&#34; target=&#34;_blank&#34;&gt;Thulika Keyboard&lt;/a&gt; - in the Play Store.
Thulika Keyboard is a Handwriting recognition keyboard. It is the first app that brings handwriting recognition to an Indian Language(Malayalam for the time being!). User writes a single symbol, the app recognizes it and may give a possible list of suggestions. Writing a keyboard for a language like Malayalam is not quite simple as &lt;a href=&#34;http://en.wikipedia.org/wiki/Malayalam_alphabet&#34; target=&#34;_blank&#34;&gt;Malayalam has a complex script&lt;/a&gt; compared to Latin languages. Some symbols may have more than one Unicode letters to accompany it. And in some cases more than one symbols make up a single Unicode letter!
Thulika uses machine learning/AI technique called &lt;a href=&#34;http://www.ai-junkie.com/ann/som/som1.html&#34; target=&#34;_blank&#34;&gt;SOM (Self Organising Map)&lt;/a&gt; using the library &lt;a href=&#34;http://www.heatonresearch.com/encog&#34; target=&#34;_blank&#34;&gt;Encog&lt;/a&gt;. Encog is a great library and is quite easy to use. I have trained it using the handwriting of my own and some of my friends. I started writing the app in October, took a break for nearly 2 weeks in November end, and the app was completed by mid-December. Then I took it lazily, and waited till January to make some final polishes and then published it :)
The entire application consists of Thulika Keyboard (the actual keyboard for end user), ThulikaTrainer (an Android app that helps in gathering user handwritings for a particular language) and ThulikaMaker (a Java application that helps in providing additional details required for the keyboard and also creates the language recognition engine). Anyone can easily help me in adding new languages for the Thulika Keyboard. &lt;a href=&#34;https://sinujohn.github.io/2013/01/14/training-the-thulika-keyboard/&#34;&gt;Read this post&lt;/a&gt; to understand how.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>j8085sim</title>
      <link>https://sinujohn.github.io/2010/07/24/j8085sim/</link>
      <pubDate>Sat, 24 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2010/07/24/j8085sim/</guid>
      <description>&lt;p&gt;I just published my BTech miniproject - 8085sim, an 8085 simulator - on Sourceforge. Download it from here -&lt;a href=&#34;http://sourceforge.net/projects/j8085sim/&#34;&gt; &lt;a href=&#34;http://sourceforge.net/projects/j8085sim/&#34;&gt;http://sourceforge.net/projects/j8085sim/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get a valid name I added a &amp;lsquo;j&amp;rsquo; (short for Java) before the name, so it is now &amp;lsquo;j8085sim&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/j8085.png&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This project is the result of about 5 weeks work by me and my team mates - Jinsmon Kurian and Deepu Devassy. Since the project demo is over, I believe this software should now be released. So here it is now. Enjoy!&lt;/p&gt;

&lt;p&gt;p.s : As with any student project this also might have some glitches, but still I believe its a stable version.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BSNL Broadband Usage Viewer</title>
      <link>https://sinujohn.github.io/2010/06/26/bsnl-broadband-usage-viewer/</link>
      <pubDate>Sat, 26 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2010/06/26/bsnl-broadband-usage-viewer/</guid>
      <description>&lt;p&gt;[UPDATE] The BSNL site design has been changed. So this program won&amp;rsquo;t work. I suppose only a small change is needed. Will try to update this post with the new link as soon as I find time for making necessary changes.[UPDATE]&lt;/p&gt;

&lt;p&gt;What is the advantage of knowing a scripting language? It helps you to automate much of the boring tasks that you do on a day-to-day basis.&lt;/p&gt;

&lt;p&gt;I was fed up of logging in, clicking a series of links and finally logging out from BSNL&amp;rsquo;s website (to be exact &lt;a href=&#34;http://www.data.bsnl.in&#34; target=&#34;_blank&#34;&gt;www.data.bsnl.in&lt;/a&gt;) just to check my broadband usage.
So this thought of automating this process occurred to me. And finally I made a small script which does this. Also I gave a GUI for it. &lt;a href=&#34;https://sinujohn.github.io/pages/projects/&#34;&gt;Download Broadband Usage Meter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/bsnlmeter.png&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There is a file called &amp;lsquo;READ ME&amp;rsquo; in it. As it goes without saying, you ought to read it ;)&lt;/p&gt;

&lt;p&gt;This program works only for those who uses &lt;a href=&#34;http://www.data.bsnl.in&#34; target=&#34;_blank&#34;&gt;www.data.bsnl.in&lt;/a&gt; to check their usage statistics. It depends heavily on the design of the site, so it maynot work in the future if BSNL decide to change their site design.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Simple Videocutter</title>
      <link>https://sinujohn.github.io/2010/06/18/simple-videocutter/</link>
      <pubDate>Fri, 18 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2010/06/18/simple-videocutter/</guid>
      <description>&lt;p&gt;I took out some time to create a simple videocutter and converter. Its actually just a front-end to &lt;a href=&#34;http://www.ffmpeg.org/&#34; target=&#34;_blank&#34;&gt;ffmpeg&lt;/a&gt;, so you require ffmpeg to run it. &lt;a href=&#34;https://gist.github.com/sinujohn/49ce39eaf09f2e3828f61b347f76d2a1&#34;&gt;Download videoCutter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/videoeditor.png&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Why did I make this? Isn&amp;rsquo;t there any other good video converter or cutter? Oh ya, there are many. One of the good ones I have found is WinFF which is also a front-end to ffmpeg. But I don&amp;rsquo;t need all those complex functions to just convert a video. And its a converter not a cutter. So that means it converts the whole video. I needed a simple, a very simple, interface to do my job. Afterall, you just need to specify input and output files and conversion parameters. Whats the need for all the fuss? Thus I sat down to make my own front-end for ffmpeg.&lt;/p&gt;

&lt;p&gt;But isn&amp;rsquo;t it same as CLI? Yep, it is. Even though I am not afraid of CLI, I prefer a beautiful GUI to do my task. Am bad at remembering all the options for ffmpeg :) Also i wanted to try out pyQt, I haven&amp;rsquo;t done anything much in it yet. The time is perfect too, am having vacation, so why shouldn&amp;rsquo;t I make a videocutter!&lt;/p&gt;

&lt;p&gt;And speaking of pyQt, its a lot simpler than I thought. The whole program is only about 290 lines, in which most of them is auto generated as I used QtCreator to design the form. Took me only 3hours to get it right, but tweaking it till I was satisfied took almost one day!&lt;/p&gt;

&lt;p&gt;And here comes an important question - can it do all conversions? Arey, yaar, it does everything which ffmpeg does, which is, a lot!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>