<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hack</title>
    <link>https://sinujohn.github.io/post/index.xml</link>
    <description>Recent content in Posts on Hack</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [PPOffice](http://github.com/ppoffice).</copyright>
    <lastBuildDate>Mon, 27 Mar 2017 15:54:02 +0530</lastBuildDate>
    <atom:link href="https://sinujohn.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Unit test - Sending emails via SMTP</title>
      <link>https://sinujohn.github.io/2017/03/27/unit-test---sending-emails-via-smtp</link>
      <pubDate>Mon, 27 Mar 2017 15:54:02 +0530</pubDate>
      
      <guid>https://sinujohn.github.io/2017/03/27/unit-test---sending-emails-via-smtp</guid>
      <description>&lt;p&gt;I had been looking for ways on how to unit test sending out emails via SMTP server. As with all other problems, there are a bunch of options for this. But most of them are not embeddable which means I have to start them and stop them outside my code. I was looking for something very simple. Something thats embeddable and provides just the bare minimum functionality that I need like asserting whether mails have been send (without actually sending them ofcourse!) and the content of the mail is actually what I intended to send. That&amp;rsquo;s how I hit upon &lt;a href=&#34;https://github.com/voodoodyne/subethasmtp&#34;&gt;Wiser or SubEtha SMTP&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The code itself is self explanatory:&lt;/p&gt;

&lt;script src=&#34;//gist.github.com/sinujohn/f4c6f2fc8d8d2ac05d73cc740943eed2.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>From wordpress to github</title>
      <link>https://sinujohn.github.io/2017/03/27/from-wordpress-to-github</link>
      <pubDate>Mon, 27 Mar 2017 15:14:34 +0530</pubDate>
      
      <guid>https://sinujohn.github.io/2017/03/27/from-wordpress-to-github</guid>
      <description>&lt;p&gt;It has been more than 6 months since I have blogged! I just shifted all my blog posts from my Wordpress &lt;a href=&#34;http://sinujohn.wordpress.com&#34;&gt;blog&lt;/a&gt; to github. First I used Jekyll. Setting it up was a pain on my Windows PC. It needed Ruby and all those extra Rubygems. Then I settled for the Jekyll Docker image. That was better, but still generating the 70-odd-posts took so long everytime, and I knew it&amp;rsquo;ll take longer as the number of posts increase. That is how I found out about &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;.
Hugo is a lot simpler. You have just one file to download and install. It has more appealing themes. It loads and generates the blog almost instantly. There is live reload too. This blog now runs on Hugo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chef notes</title>
      <link>https://sinujohn.github.io/2016/06/01/chef-notes/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2016/06/01/chef-notes/</guid>
      <description>

&lt;p&gt;Sometime back I had to fiddle with &lt;a href=&#34;https://www.chef.io/&#34; target=&#34;_blank&#34;&gt;Chef&lt;/a&gt;. I created some notes, posting it over here, so that I won&amp;rsquo;t loose it. Don&amp;rsquo;t think it&amp;rsquo;ll be useful much to anyone else other than me :) Its basically a list of instructions that is scattered on their site.&lt;/p&gt;

&lt;p&gt;So, anyone other than me, please ignore this post!&lt;/p&gt;

&lt;h2 id=&#34;write-a-cookbook&#34;&gt;Write a cookbook&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;chef generate repo ~/chef-repo&lt;/code&gt;
=&amp;gt; Install starter kit to create .chef directory and certs that we need to communicate with chef server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/chef-repo
chef generate cookbook cookbooks/COOKBOOK_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-a-recipe&#34;&gt;Create a recipe:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;chef generate recipe cookbooks/COOKBOOK_NAME RECIPE_NAME&lt;/code&gt; =&amp;gt; RECIPE_NAME shouldn’t have suffix. Eg. it should be ‘webserver and not ‘webserver.rb’
=&amp;gt; Write the script in RECIPE_NAME.rb file that got generated&lt;/p&gt;

&lt;h2 id=&#34;how-to-refer-include-a-recipe-recipe-name-in-another-recipe&#34;&gt;How to refer(include) a recipe(RECIPE_NAME) in another recipe:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;include_recipe &#39;COOKBOOK_NAME::RECIPE_NAME&#39;&lt;/code&gt; =&amp;gt; Eg: include_recipe &amp;lsquo;my_cookbook::webserver&amp;rsquo;&lt;/p&gt;

&lt;p&gt;=&amp;gt; By default the recipe that gets called is ‘cookbooks/COOKBOOK_NAME/recipes/default.rb’
=&amp;gt; So include any other recipe in this using include_recipe&lt;/p&gt;

&lt;h2 id=&#34;create-a-file&#34;&gt;Create a file:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;chef generate file cookbooks/COOKBOOK_NAME FILE_NAME.txt&lt;/code&gt;&lt;/p&gt;

&lt;hr/&gt;

&lt;h2 id=&#34;how-to-upload-the-cookbook-to-the-chef-server-there-are-2-ways&#34;&gt;How to upload the cookbook to the chef server. There are 2 ways:&lt;/h2&gt;

&lt;h4 id=&#34;option-1-prefer-this-one-this-one-takes-up-the-dependencies-if-any&#34;&gt;Option 1. Prefer this one. This one takes up the dependencies if any.&lt;/h4&gt;

&lt;p&gt;Create a file named Berksfile in the ~/chef-repo/cookbooks/COOKBOOK_NAME directory
Add the following to that file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source &amp;quot;https://supermarket.chef.io&amp;quot;
metadata
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install the dependencies:
&lt;code&gt;berks install&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally upload (along with dependencies):
&lt;code&gt;berks upload&lt;/code&gt; =&amp;gt; OR without SSL =&amp;gt; &lt;code&gt;berks upload --no-ssl-verify&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;option-2-this-one-just-uploads-the-cookbook-won-t-download-dependencies&#34;&gt;Option 2. This one just uploads the cookbook. Won’t download dependencies&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;knife cookbook upload COOKBOOK_NAME&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;view-uploaded-cookbooks&#34;&gt;View uploaded cookbooks:&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;knife cookbook list&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;bootstraping-the-node&#34;&gt;Bootstraping the node&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;knife ssl fetch ##Save the SSL certificate
knife bootstrap IP_ADDRESS_OF_NODE -x ROOT_USER_NAME -P ROOT_PASSWORD --sudo 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;verify-bootstrap-process-was-successful-either-check-in-chef-manage-console-or-do&#34;&gt;Verify bootstrap process was successful. Either check in chef manage console or do:&lt;/h2&gt;

&lt;h4 id=&#34;on-windows&#34;&gt;On Windows&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;knife node list | findstr NODE_NAME_WINDOWS&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;on-linux&#34;&gt;On Linux&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;knife node list | grep NODE_NAME_WINDOWS&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;how-to-reference-another-cookbook&#34;&gt;How to reference another cookbook:&lt;/h2&gt;

&lt;p&gt;Append following to &lt;code&gt;~/chef-repo/cookbooks/COOKBOOK_NAME/metadata.rb&lt;/code&gt;:
&lt;code&gt;depends &#39;ANOTHER_COOKBOOK_NAME&#39;, &#39;~&amp;gt; MAJOR.MINOR.PATCH&#39;&lt;/code&gt; =&amp;gt; Eg: &lt;code&gt;depends &#39;sql_server&#39;, &#39;~&amp;gt; 2.4.0&#39;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;how-to-override-third-party-cookbook-s-attributes&#34;&gt;How to override third party cookbook’s attributes:&lt;/h2&gt;

&lt;h4 id=&#34;create-a-custom-attribute-file-that-overrides-third-party-attribute-values&#34;&gt;Create a custom attribute file that overrides third party attribute values:&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;chef generate attribute cookbooks/COOKBOOK_NAME default&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;add-override-values-as-follows-in-the-generated-cookbooks-cookbook-name-attributes-default-rb&#34;&gt;Add override values as follows in the generated ‘cookbooks/COOKBOOK_NAME/attributes/default.rb‘:&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;default[&#39;ANOTHER_COOKBOOK_NAME&#39;][&#39;ATTRIBUTE_NAME&#39;] = ATTRIBUTE_VALUE&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Eg: &lt;code&gt;default[&#39;sql_server&#39;][&#39;accept_eula&#39;] = true&lt;/code&gt;
Eg: &lt;code&gt;default[&#39;sql_server&#39;][&#39;version&#39;] = &#39;2012&#39;&lt;/code&gt;
Eg: &lt;code&gt;default[&#39;sql_server&#39;][&#39;instance_name&#39;] = &#39;MSSQLSERVER&#39;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;modifying-cookbook-version&#34;&gt;Modifying cookbook version:&lt;/h2&gt;

&lt;p&gt;Edit &lt;code&gt;~/chef-repo/cookbooks/COOKBOOK_NAME/metadata.rb&lt;/code&gt; to change the version&lt;/p&gt;

&lt;h2 id=&#34;applying-cookbook-on-node&#34;&gt;Applying cookbook on node:&lt;/h2&gt;

&lt;p&gt;Run the following directly on the &lt;strong&gt;NODE&lt;/strong&gt;, (NOT ON THE workstation):
&lt;code&gt;chef-client&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Java - Add lib folder to classpath</title>
      <link>https://sinujohn.github.io/2016/06/01/java-add-lib-folder-to-classpath/</link>
      <pubDate>Wed, 01 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2016/06/01/java-add-lib-folder-to-classpath/</guid>
      <description>&lt;p&gt;Adding non standard, non-maven, custom jars in a maven project is a common issue. And &lt;a href=&#34;http://stackoverflow.com/questions/364114/can-i-add-jars-to-maven-2-build-classpath-without-installing-them&#34; target=&#34;_blank&#34;&gt;this SO post&lt;/a&gt; is usually the first googled result. But here is another easier way: Use &lt;a href=&#34;https://code.google.com/archive/p/addjars-maven-plugin/wikis/UsagePage.wiki&#34; target=&#34;_blank&#34;&gt;addjars-maven-plugin&lt;/a&gt;. Its easier, no need to run any script, no installing of jars manually, or use the dreaded system scope. Using this also means, the shaded uber jar that gets created will contain the custom jars.&lt;/p&gt;

&lt;p&gt;How to use?&lt;/p&gt;

&lt;p&gt;Add the jars to a lib folder directly inside the project directory (the project directory now contains lib, src and other usual stuff). Now add this to the pom:
&lt;pre&gt;&amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;com.googlecode.addjars-maven-plugin&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;addjars-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.0.5&amp;lt;/version&amp;gt;
            &amp;lt;executions&amp;gt;
                &amp;lt;execution&amp;gt;
                    &amp;lt;goals&amp;gt;
                        &amp;lt;goal&amp;gt;add-jars&amp;lt;/goal&amp;gt;
                    &amp;lt;/goals&amp;gt;
                    &amp;lt;configuration&amp;gt;
                        &amp;lt;resources&amp;gt;
                            &amp;lt;resource&amp;gt;
                                &amp;lt;directory&amp;gt;${project.basedir}/lib&amp;lt;/directory&amp;gt;
                            &amp;lt;/resource&amp;gt;
                        &amp;lt;/resources&amp;gt;
                    &amp;lt;/configuration&amp;gt;
                &amp;lt;/execution&amp;gt;
            &amp;lt;/executions&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;&lt;/pre&gt;
This may not be recognised by the IDE (my Intellij didn&amp;rsquo;t), but it will work via CLI. So no worries! Very useful in those rare cases, where you have a dozen of custom jars!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Certified Monadic I am!</title>
      <link>https://sinujohn.github.io/2016/01/09/certified-monadic-i-am/</link>
      <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2016/01/09/certified-monadic-i-am/</guid>
      <description>&lt;p&gt;I took the Functional Programming course on edX and completed it last month. Scored 99% :)&lt;/p&gt;

&lt;p&gt;This is the first time I am completing an online MOOC. Usually I drop all the courses after one or two weeks. Lazy me!&lt;/p&gt;

&lt;p&gt;Here is &lt;a href=&#34;https://courses.edx.org/certificates/cb45414ca36c44a395a2985014ce8528&#34; target=&#34;_blank&#34;&gt;my VERIFIED certificate&lt;/a&gt; signed by &lt;a href=&#34;https://en.wikipedia.org/wiki/Erik_Meijer_(computer_scientist)&#34; target=&#34;_blank&#34;&gt;Dr.Erik Meijer&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/monad.png&#34; alt=&#34;Functional Programming&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Certified Spring Professional</title>
      <link>https://sinujohn.github.io/2015/09/19/certified-spring-professional/</link>
      <pubDate>Sat, 19 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/09/19/certified-spring-professional/</guid>
      <description>&lt;p&gt;Now am a &lt;a href=&#34;http://pivotal.io/academy#certification&#34; target=&#34;_blank&#34;&gt;Pivotal Certified Spring Professional&lt;/a&gt;. Took the exam yesterday in Core Spring (Spring 4.0) and received the certificate today.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/spring.png&#34; alt=&#34;Certified Spring Professional&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Developer Personality</title>
      <link>https://sinujohn.github.io/2015/05/21/my-developer-personality/</link>
      <pubDate>Thu, 21 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/05/21/my-developer-personality/</guid>
      <description>&lt;p&gt;I took a &lt;a href=&#34;http://bit.ly/1uSzyss&#34; target=&#34;_blank&#34;&gt;Developer Personality Test&lt;/a&gt;, conducted by &lt;a href=&#34;http://java.dzone.com/dzone-developer-personality-quiz&#34; target=&#34;_blank&#34;&gt;DZone&lt;/a&gt; and it almost sums up what I am! Here&amp;rsquo;s the result I got:&lt;/p&gt;

&lt;hr /&gt;

&lt;div id=&#34;sgE-1883619-2-119-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Here are your results!&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-2-box&#34; class=&#34;sg-question sg-type-quizscore&#34;&gt;
&lt;h1 class=&#34;sg-question-title&#34;&gt;&lt;strong&gt;Independent vs Collaborative&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 class=&#34;sg-question-options&#34;&gt;You are &lt;strong&gt;Independent&lt;/strong&gt;!&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-104-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Independent:&lt;/strong&gt;
You prefer to spend most of your time working in an isolated environment.  You rarely want to collaborate because you have a better chance of solving problems on your own.  If you do have to collaborate on the direction of a project, you dislike it when you have to defend your position or when others try to muddy your plans for the project.  It&#39;s better to have one strong vision for a project from the lead programmer on that project.  Having a large team or allowing others to have significant control over the project risks communication errors, a muddied code base, and inefficiencies.  If one developer has a firm grasp on the entire codebase, they&#39;ll be much better at fixing and improving it quickly.

&lt;strong&gt;Collaborative:&lt;/strong&gt;
Good code doesn&#39;t happen in a vacuum.  You need a team to keep you energized and on your toes so that you&#39;re constantly improving the project code using the entire team&#39;s varied experience and strengths.  You like to talk frequently with colleagues and discuss ideas so that you can learn from others and spark ideas.  It doesn&#39;t matter what their experience level is, you can always learn something by including everyone.  A solo coder can&#39;t possibly code a large software project with the speed and quality that a team can.&lt;/div&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-59-box&#34; class=&#34;sg-question sg-type-quizscore&#34;&gt;
&lt;h1 class=&#34;sg-question-title&#34;&gt;&lt;strong&gt;Abstract vs Low-Level&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 class=&#34;sg-question-options&#34;&gt;You are both &lt;strong&gt;Abstract &lt;/strong&gt;&amp;amp;&lt;strong&gt; Low-Level&lt;/strong&gt;!&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-105-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Abstract:&lt;/strong&gt;
You prefer to write in languages and frameworks that simplify development as much as possible and use as few characters and lines of code as possible. The trajectory of software development has always been toward making life easier and error-free. Programming has always been about adding more abstraction layers to simplify tasks, so why not trust the technology on your layer and don&#39;t worry about handling the lower layers?

&lt;strong&gt;Low-Level:&lt;/strong&gt;
The more abstraction tools and high-level languages we build, the further we get from understanding and controlling the deeper components in our programs.  This means lower performance and endless bug searches.  Developers today need to have a stronger understanding of compilers, memory management, pointer arithmetic, and other low-level topics.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-8-box&#34; class=&#34;sg-question sg-type-quizscore&#34;&gt;
&lt;div class=&#34;sg-question-title&#34;&gt;&lt;/div&gt;
&lt;h1 class=&#34;sg-question-title&#34;&gt;&lt;strong&gt;Frontier vs Conservative&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 class=&#34;sg-question-options&#34;&gt;You are &lt;strong&gt;Conservative&lt;/strong&gt;!&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-106-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Frontiers:&lt;/strong&gt;
You like to work at the cutting edge.  Using too many old languages and technologies bores you, and it severely hinders your software&#39;s potential to keep outdated technologies in it for too long. Developers need keep their ears to the ground for new technologies and new versions of tools that they already use.  Even if the community and maturity of the project isn&#39;t at a level that most enterprises would consider &#34;safe,&#34; you&#39;re willing to be an early adopter if you believe the community and the technology has momentum.  Development technology is changing faster every day, and we need to constantly be adopting new tools and methods to keep up.

&lt;strong&gt;Conservative:&lt;/strong&gt;
It seems like every 10 years we forget all the problems we solved in the previous decade and start to build &#39;new&#39; tools that solve the same problems, even though there is a perfectly good solution that has existed for years.  Enterprises have it right when they make conservative decisions about their technology stack. Why would you hang your business on a technology with only a few years of maturity in just a handful of production use cases?  Technologies like PHP, Java, and SQL have been mainstays of the development industry for years, and it takes a lot of time for new technologies to make it into that maturity tier.
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-72-box&#34; class=&#34;sg-question sg-type-quizscore&#34;&gt;
&lt;h1 class=&#34;sg-question-title&#34;&gt;&lt;strong&gt;Generalist vs Specialist&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 class=&#34;sg-question-options&#34;&gt;You are both a &lt;strong&gt;Generalist &lt;/strong&gt;&amp;amp; a&lt;strong&gt; Specialist&lt;/strong&gt;!&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-107-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Generalist:&lt;/strong&gt;
You like to be known as a &#34;Jack of all Trades&#34; and a reference for others on your team. You jump at every chance to enhance your skills in a wide variety technology topics, not just the ones that apply to your day to day work.  You don&#39;t always know when it might be useful to have these extra skills, but when the time comes, you are ready.  If more developers took the time to learn other skills outside of the ones relevant to their project, they&#39;d work more seamlessly with the rest of their organization because they&#39;d have more empathy and understanding of the challenges that their colleagues face.

&lt;strong&gt;Specialist:&lt;/strong&gt;
If you&#39;re a Jack of all Trades, you&#39;re a master of none. Mastery in one or two areas is what makes you valuable.  What&#39;s the point of learning skills for other jobs you don&#39;t have and can&#39;t control? When you plan for a project or do technical research, it&#39;s always focused on something you&#39;re working on. You don&#39;t get side-tracked. If you learn a new skill, it&#39;s because the project requires that you do it. Most or all of your hobby projects are also building your mastery of the skills you use at your job.&lt;/div&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-93-box&#34; class=&#34;sg-question sg-type-quizscore&#34;&gt;
&lt;h1 class=&#34;sg-question-title&#34;&gt;&lt;strong&gt;Idealist vs Pragmatist&lt;/strong&gt;&lt;/h1&gt;
&lt;h2 class=&#34;sg-question-options&#34;&gt;You are an &lt;strong&gt;Idealist&lt;/strong&gt;!&lt;/h2&gt;
&lt;/div&gt;
&lt;div id=&#34;sgE-1883619-2-108-box&#34; class=&#34;sg-question sg-type-instruction&#34;&gt;
&lt;div class=&#34;sg-instructions&#34;&gt;&lt;strong&gt;Idealist:&lt;/strong&gt;
You believe in the power of well-defined processes. It&#39;s crucial to an organization&#39;s success that they create and follow appropriate and effective processes for building software. Trying to improvise or play it by ear invites the possibility of workflow errors that can decrease the quality of the software or even cause major product failures. Planning is also extremely important to you.  You like to research all of the things you will need to know before starting a project.  It&#39;s important to find out the best architecture for your software beforehand, and then strictly implement that architecture with objective best practices.  The more planning and scaffolding you do in the beginning, the less overall work you will have to do to complete the software.

&lt;strong&gt;Pragmatist:&lt;/strong&gt;
Speed is your best weapon in a competitive industry, and to quickly prototype and build new products, you need to have a flexible, pragmatic process.  You don&#39;t have a few months to plan your projects, you need to just start coding and a good path for the project will reveal itself.  Great products are made through frequent feedback and releases, so why shouldn&#39;t your plan be just as adaptable? Your plan should be adapted to changes in the software, and your expertise should be adapted to the project. You shouldn&#39;t spend your precious time studying a problem that you&#39;re not certain to run into while coding your projects.  Trying to build test coverage for every possible scenario and having long meetings throughout the process are a waste of time and distract you from doing more productive work.&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>RIP Thulika Keyboard.. (sob).. (sob)</title>
      <link>https://sinujohn.github.io/2015/05/12/rip-thulika-keyboard-sob-sob/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/05/12/rip-thulika-keyboard-sob-sob/</guid>
      <description>&lt;p&gt;Just got to know that Google has came up with an handwriting recognition app - &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.handwriting.ime&amp;amp;hl=en&#34;&gt;Google Handwriting Input&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And the good part is it has got Indian language support. Yay!!&lt;/p&gt;

&lt;p&gt;But the bad part is that, it means the demise of my very own &lt;a href=&#34;https://play.google.com/store/apps/details?id=me.sinu.thulika&amp;amp;hl=en&#34;&gt;Thulika Keyboard&lt;/a&gt;. I had created it &lt;a href=&#34;https://sinujohn.github.io/2013/01/21/thulika-keyboard/&#34;&gt;about 2 years back&lt;/a&gt;, and at that time there was no handwriting recognition app for any Indian language. I also had opensourced it, and have got requests from many to translate it to their language(Arabic, Hausa, Tamil to name a few) and some even have used it as part of their school/college projects.&lt;/p&gt;

&lt;p&gt;RIP Thulika Keyboard, it was pleasure to have you around(it&amp;rsquo;s still out there, so you can download it and play with it, but with Google&amp;rsquo;s new app, mine seems a bit primitive :( ).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/rip.jpg&#34; alt=&#34;RIP&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Google&amp;rsquo;s new app is awesome though, it recognises full words (mine could only do a letter at a time), and speaking about recognition, its very good at that.&lt;/p&gt;

&lt;p&gt;So, here is me(Thulika), the old out dated tech giving way for the new stylish Google app ;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wait... But... Why?</title>
      <link>https://sinujohn.github.io/2015/05/12/wait-but-why/</link>
      <pubDate>Tue, 12 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/05/12/wait-but-why/</guid>
      <description>&lt;p&gt;I don&amp;rsquo;t always subscribe to blogs..&lt;/p&gt;

&lt;p&gt;But when its about nicely written articles about science, technology and all the cool things that I usually want to read about, but couldn&amp;rsquo;t, I am like:
&lt;img src=&#34;https://sinujohn.github.io/assets/9e9.gif&#34; alt=&#34;takemymoney&#34; /&gt;&lt;/p&gt;

&lt;p&gt;I have become a fan of &lt;a href=&#34;http://waitbutwhy.com/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://waitbutwhy.com/&#34;&gt;http://waitbutwhy.com/&lt;/a&gt;&lt;/a&gt; just after reading an &lt;a href=&#34;http://waitbutwhy.com/2015/05/elon-musk-the-worlds-raddest-man.html&#34; target=&#34;_blank&#34;&gt;article about Elon Musk&lt;/a&gt; and one about &lt;a href=&#34;http://waitbutwhy.com/2014/05/fermi-paradox.html&#34; target=&#34;_blank&#34;&gt;Fermi Paradox&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programmer Zen</title>
      <link>https://sinujohn.github.io/2015/05/04/programmer-zen/</link>
      <pubDate>Mon, 04 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/05/04/programmer-zen/</guid>
      <description>&lt;p&gt;Just &lt;a href=&#34;http://eloquentjavascript.net/10_modules.html&#34;&gt;read this quote&lt;/a&gt; and I loved it:
&lt;blockquote&gt;A beginning programmer writes her programs like an ant builds her hill, one piece at a time, without thought for the bigger structure. Her programs will be like loose sand. They may stand for a while, but growing too big they fall apart.&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;p_OfZWeuo+oF&#34; class=&#34;p_ident&#34; href=&#34;http://eloquentjavascript.net/10_modules.html#p_OfZWeuo+oF&#34;&gt;&lt;/a&gt;Realizing this problem, the programmer will start to spend a lot of time thinking about structure. Her programs will be rigidly structured, like rock sculptures. They are solid, but when they must change, violence must be done to them.&lt;/p&gt;

&lt;p&gt;&lt;a id=&#34;p_fFMEGH1dk3&#34; class=&#34;p_ident&#34; href=&#34;http://eloquentjavascript.net/10_modules.html#p_fFMEGH1dk3&#34;&gt;&lt;/a&gt;The master programmer knows when to apply structure and when to leave things in their simple form. Her programs are like clay, solid yet malleable.&lt;/blockquote&gt;
&amp;ndash; Master Yuan-Ma, &lt;cite&gt;The Book of Programming&lt;/cite&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Authenticating using Facebook</title>
      <link>https://sinujohn.github.io/2015/03/12/authenticating-using-facebook/</link>
      <pubDate>Thu, 12 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/03/12/authenticating-using-facebook/</guid>
      <description>&lt;p&gt;I had figured out how to authenticate users using Facebook a couple of months back. But I didn&amp;rsquo;t document it, and so yesterday I again wasted my time figuring it out. So here is the brain dumb so that I won&amp;rsquo;t waste my time again at the time of need. :)&lt;/p&gt;

&lt;p&gt;Prerequisite: &lt;a href=&#34;https://developers.facebook.com/apps/&#34; target=&#34;_blank&#34;&gt;Create an app&lt;/a&gt; using Facebook Developer account and create the necessary App ID and App Secret keys.&lt;/p&gt;

&lt;p&gt;If you are testing out your app and you are running it locally, the site URL should be something like &lt;a href=&#34;http://localhost:8090/&#34;&gt;http://localhost:8090/&lt;/a&gt;
&lt;h3&gt;At the client side:&lt;/h3&gt;
&lt;strong&gt;Asking for permission and login:&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;Use the SDK provided by facebook&lt;/li&gt;
    &lt;li&gt;I am assuming Javascript SDK is used. Inspect the response returned.
&lt;ul&gt;
    &lt;li&gt;Send the &lt;strong&gt;authResponse.accessToken&lt;/strong&gt; and &lt;strong&gt;authResponse.userID&lt;/strong&gt; to the server for authentication.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
At the server side:&lt;/h3&gt;
&lt;strong&gt;Authentication:&lt;/strong&gt;
&lt;ul&gt;
    &lt;li&gt;Verify the user by calling the Facebook Graph API:&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&#34;padding-left:60px;&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://graph.facebook.com/debug_token?input_token={authResponse.accessToken}&amp;amp;access_token={app_id|app_secret&#34;&gt;https://graph.facebook.com/debug_token?input_token={authResponse.accessToken}&amp;amp;access_token={app_id|app_secret&lt;/a&gt;}&lt;/strong&gt;&lt;/p&gt;
&lt;p style=&#34;padding-left:60px;&#34;&gt;&lt;strong&gt;Response&lt;/strong&gt;:&lt;/p&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;data&amp;quot;: {
        &amp;quot;app_id&amp;quot;: &amp;quot;1234&amp;quot;,
        &amp;quot;application&amp;quot;: &amp;quot;testapp&amp;quot;,
        &amp;quot;expires_at&amp;quot;: 1426158000,
        &amp;quot;is_valid&amp;quot;: true,
        &amp;quot;scopes&amp;quot;: [
                &amp;quot;public_profile&amp;quot;,
                &amp;quot;email&amp;quot;
                ],
        &amp;quot;user_id&amp;quot;: &amp;quot;111112223333&amp;quot;
     }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt; input_token&lt;/strong&gt; is the &lt;strong&gt;authResponse.accessToken&lt;/strong&gt; we obtained as a result of the login process from Facebook.
&lt;strong&gt;access_token&lt;/strong&gt; is the &lt;a href=&#34;https://developers.facebook.com/docs/facebook-login/access-tokens/#apptokens&#34; target=&#34;_blank&#34;&gt;&lt;strong&gt;App Token&lt;/strong&gt;&lt;/a&gt;. It can either be generated as mentioned in &lt;a href=&#34;https://developers.facebook.com/docs/facebook-login/access-tokens/#apptokens&#34; target=&#34;_blank&#34;&gt;this link&lt;/a&gt;. Or instead of generating we can use the concatenated form: &lt;strong&gt;{app_id}&lt;/strong&gt; + &lt;strong&gt;&amp;rsquo;|&amp;rsquo;&lt;/strong&gt; + &lt;strong&gt;{app_secret}&lt;/strong&gt;. I have used this second form above.&lt;/li&gt;
    &lt;li&gt;Verify the JSON obtained and check whether &lt;strong&gt;&amp;ldquo;is_valid&amp;rdquo; == True&lt;/strong&gt; and &lt;strong&gt;&amp;ldquo;user_id&amp;rdquo; == authResponse.userID&lt;/strong&gt; to make sure user is a valid one.&lt;/li&gt;
    &lt;li&gt;The &lt;strong&gt;authResponse.userID&lt;/strong&gt; returned can be used to identify the user and used instead of username to lookup users.&lt;/li&gt;
&lt;/ul&gt;
&lt;strong&gt;Using the Graph API:&lt;/strong&gt;
&lt;p style=&#34;padding-left:30px;&#34;&gt;Suppose we want to obtain the user&amp;rsquo;s email Id at the server side:
Call the API as follows:
&lt;strong&gt;&lt;a href=&#34;https://graph.facebook.com/{authResponse.userID}?fields=email&amp;amp;access_token={authResponse.accessToken&#34;&gt;https://graph.facebook.com/{authResponse.userID}?fields=email&amp;amp;access_token={authResponse.accessToken&lt;/a&gt;}&lt;/strong&gt;&lt;/p&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Again Agastyakoodam !</title>
      <link>https://sinujohn.github.io/2015/03/11/again-agastyakoodam/</link>
      <pubDate>Wed, 11 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/03/11/again-agastyakoodam/</guid>
      <description>&lt;p&gt;When I completed the &lt;a href=&#34;{{ site.baseurl }}{% post_url 2013-03-11-agastyakoodam-trekking %}&#34;&gt;Agastyakoodam trek two years back&lt;/a&gt;, I had decided to visit this awesome place again. It happened this year about two months back.&lt;/p&gt;

&lt;p&gt;This time it was a group of 6 friends, including me. We were very much fortunate to get the entry permit on the first day of the trekking season. This gave us the forest in a much more pristine and virgin form. Because, as people start coming forest loses its glory!&lt;/p&gt;

&lt;p&gt;There is not much to write as I have already explained about the trek in &lt;a href=&#34;{{ site.baseurl }}{% post_url 2013-03-11-agastyakoodam-trekking %}&#34;&gt;my previous blog entry&lt;/a&gt;. But I&amp;rsquo;ll highlight the differences that happened this year.&lt;/p&gt;

&lt;p&gt;This year onwards, permit is being sanctioned online by the Kerala Forest Department. This saved us a lot of hassle and we got the permit for the first day itself(the season started on Jan 15th this time).&lt;/p&gt;

&lt;p&gt;We started on January 15 and completed the trek in 3 days, unlike the last time where we did it in 2 days. The result? We enjoyed the trek much more. It was a relaxed trek and we enjoyed it to the core. We took ample photos and videos too, something we couldn&amp;rsquo;t so last time because of time constraints :). I would recommend everyone to complete the trek in 3 days.&lt;/p&gt;

&lt;p&gt;This time our gang was in a uniform (except one - he could make it only at the last moment, and so couldn&amp;rsquo;t have the luxury of being in our uniform). See our uniform for yourself. Bhakti exploding :D&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://sinujohn.github.io/assets/agastya4.jpg&#34; alt=&#34;The Five&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In fact, the forest warden in the base camp told us seeing our uniform that we had immense Bhakti inside us :D Little did he know that it was just a show off. Any way, this uniform was one of our best decisions. Trekking wearing this attire was the most comfortable thing!&lt;/p&gt;

&lt;p&gt;So here is the trip in short - we started on Jan 15th morning at about 11:30 (we reached their late) and reached the base camp by 6 PM. The next morning we started the ascend to the peak at about 7 in the morning. This time since we were not at all in a hurry, we took enough time in enjoying each step ;). We reached the top at 2 PM! (thats&amp;rsquo;s too late by any standard, they want you to start the downward trek by 2:45PM max). Unlike last time, it was not at all windy, also it was too hot at the top. We started the downward journey by 2:30PM and reached the base camp by about 5:30PM (ya, downward journey was completed pretty quickly). We rested off the night. Next day morning, our departure was delayed by unexpected rains. So we could only start by 9 AM. We reached forest outpost by about 3:30PM. And thus our trek was done.&lt;/p&gt;

&lt;p&gt;We had tracked our journey with GPS. I&amp;rsquo;ll update this post once I get the track details from my friend.&lt;/p&gt;

&lt;p&gt;Keep Travelling :) Enjoy the world. :) Don&amp;rsquo;t disturb what&amp;rsquo;s left off the forest and don&amp;rsquo;t leave any traces :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>angamaly-marakkamo</title>
      <link>https://sinujohn.github.io/2015/03/10/angamaly-marakkamo/</link>
      <pubDate>Tue, 10 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/03/10/angamaly-marakkamo/</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;&amp;ldquo;മനുഷ്യരെ രക്ഷിക്കേണ്ടത് ദൈവമാണ്. അല്ലാതെ ദൈവത്തെ രക്ഷിക്കേണ്ടത് മനുഷ്യരല്ല. ദൈവത്തെ മനുഷ്യൻ രക്ഷിക്കേണ്ടി വരുമ്പോൾ ദൈവത്തിന്റെ വിലയിടിയുന്നു.&amp;rdquo; - &lt;a href=&#34;http://www.firstministry.kerala.gov.in/pdf/angamali.pdf&#34; target=&#34;_blank&#34;&gt;അങ്കമാലി മറക്കാമോ? - P.J.Antony&lt;/a&gt;&lt;/blockquote&gt;
P.J. Antony writes that people were fooled into taking part in the Liberation Struggle (Vimochanasamaram) by the Church, the Congress party and everyone else (Uncle Sam&amp;rsquo;s CIA??) who were afraid of the Communist party getting their first foothold in India&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Another NoSQL to the kitty</title>
      <link>https://sinujohn.github.io/2015/01/08/another-nosql-to-the-kitty/</link>
      <pubDate>Thu, 08 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2015/01/08/another-nosql-to-the-kitty/</guid>
      <description>&lt;p&gt;Graph database is a great tool for mapping and traversing data with relationships. But doesn&amp;rsquo;t RDBMS have relationships - one-to-one, many-to-one etc? Why should we go for graphs?
Its simple! Graph databases are best suited for those cases in which a graph comes to our mind instead of a table!
I finished the online course on &lt;a href=&#34;http://neo4j.com/&#34;&gt;Neo4J&lt;/a&gt; two days back. Its a really simple graph database, and a great starting point to experiment graph databases.&lt;/p&gt;

&lt;p&gt;Now the NoSql databases I am familiar with are HBase(tried it about a year back), Redis and Neo4J.&lt;/p&gt;

&lt;p&gt;Read and explore stuffs outside your domain. Happy coding :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jackson JSON and Dynamic JSON creation</title>
      <link>https://sinujohn.github.io/2014/09/29/jackson-json-and-dynamic-json-creations/</link>
      <pubDate>Mon, 29 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2014/09/29/jackson-json-and-dynamic-json-creations/</guid>
      <description>&lt;p&gt;FasterXML Jackson is a great tool for converting objects to/from POJOs.&lt;/p&gt;

&lt;p&gt;Its a great tool when we know the structure of JSON beforehand. But what if we don&amp;rsquo;t know that? In that case we can use a Map&amp;lt;String, Object&amp;gt; to store the unknown objects. Below two links provide useful info:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/18043587/why-im-not-able-to-unwrapp-and-serialize-java-map-using-jackson-java-library&#34;&gt;http://stackoverflow.com/questions/18043587/why-im-not-able-to-unwrapp-and-serialize-java-map-using-jackson-java-library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cowtowncoder.com/blog/archives/2011/07/entry_458.html&#34;&gt;http://www.cowtowncoder.com/blog/archives/2011/07/entry_458.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy Coding :)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>