<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Sinu John</title>
    <link>https://sinujohn.github.io/tags/c/</link>
    <description>Recent content in C on Sinu John</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-SA 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 01 Jun 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://sinujohn.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Boost and a look back on C&#43;&#43;</title>
      <link>https://sinujohn.github.io/2014/01/20/boost-and-a-look-back-on-c/</link>
      <pubDate>Mon, 20 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2014/01/20/boost-and-a-look-back-on-c/</guid>
      <description>These days am a full time Java guy and the last time I coded in C++ was a little over an year ago. It was then I came across Boost library and I had heard that it packed a lot under the 5 letter library BOOST. Even though I haven&amp;rsquo;t much used Boost, since it is being made part of the C++ standard, I don&amp;rsquo;t want to be a person who knew legacy C++ and so was always keen to know about Boost.</description>
    </item>
    
    <item>
      <title>Sending a file by HTTP POST</title>
      <link>https://sinujohn.github.io/2010/09/28/sending-a-file-by-http-post/</link>
      <pubDate>Tue, 28 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2010/09/28/sending-a-file-by-http-post/</guid>
      <description>///////////////////////////////////////////////////////////// //client.c // Send file to an HTTP server in small parts using POST // USAGE: client inputfile // // Compile: // gcc -o client client.c -lcurl // // Developer: // Sinu John - https://sinujohn.github.io/ // //////////////////////////////////////////////////////////////  #include&amp;lt;curl/curl.h&amp;gt;#include&amp;lt;fcntl.h&amp;gt;#include&amp;lt;unistd.h&amp;gt; //No. of bytes to be sent in one pass #define SIZELIMIT 100*1024  //#define _SEND_DEBUG_  int sendFile(const char *fileName, const char *url) // Sends file to &amp;#39;url&amp;#39; with an additional header &amp;#39;Count&amp;#39; (specifying count of the packet) { // An header &amp;#39;Filename&amp;#39; is also added  int COUNT=0; int fd = open(fileName, O_RDONLY); if(fd&amp;lt;0) { printf(&amp;#34;\nERROR: Cannot open the file\n&amp;#34;); return -1; } CURL *handle; char buf[SIZELIMIT]; //Data to be sent is stored in this buffer.</description>
    </item>
    
    <item>
      <title>A quick introduction toÂ GCC</title>
      <link>https://sinujohn.github.io/2010/06/06/a-quick-introduction-to-gcc/</link>
      <pubDate>Sun, 06 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://sinujohn.github.io/2010/06/06/a-quick-introduction-to-gcc/</guid>
      <description>GCC- GNU Compiler CollectionFrom GCC manual - When you invoke GCC, it normally does preprocessing, compilation, assembly and linking.This creates an executable &amp;lsquo;hello.out&amp;rsquo; from file &amp;lsquo;hello.c&amp;rsquo; -o specifies the output file.
gcc -o hello.out hello.cpp This results in an error as gcc tries to perform C++ compilation(assumed from the extension .cpp). We can specify that the file is a C file as follows:
gcc -x c -o hello.out hello.cpp -x specifies the language.</description>
    </item>
    
  </channel>
</rss>